import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as r,c as o,a as e,b as n,d as a,e as t}from"./app-63504f8e.js";const c={},d=t('<h1 id="vuepress-部署笔记" tabindex="-1"><a class="header-anchor" href="#vuepress-部署笔记" aria-hidden="true">#</a> Vuepress 部署笔记</h1><h2 id="前提工作" tabindex="-1"><a class="header-anchor" href="#前提工作" aria-hidden="true">#</a> 前提工作</h2><ol><li>安装 node.js 18.x 以上的版本 (Windows 上可以直接覆盖安装实现升级)</li><li>通过 npm 安装 pnpm, 安装后 pnpm 将取代 npm, npm 将无法使用</li></ol><h2 id="基本部署" tabindex="-1"><a class="header-anchor" href="#基本部署" aria-hidden="true">#</a> 基本部署</h2>',4),p={id:"安装-vuepress",tabindex:"-1"},u=e("a",{class:"header-anchor",href:"#安装-vuepress","aria-hidden":"true"},"#",-1),h={href:"https://v2.vuepress.vuejs.org/zh/guide/getting-started.html",target:"_blank",rel:"noopener noreferrer"},m=t(`<ul><li>.gitignore 应手动创建, 若采用脚本则注意将编码改为 utf-8</li><li>设置完 package.json 后使用以下命令进行开发</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 用于开发时预览</span>
<span class="token function">pnpm</span> docs:dev

<span class="token comment"># 用于生成静态页面</span>
<span class="token function">pnpm</span> docs:build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),v={id:"基本配置",tabindex:"-1"},b=e("a",{class:"header-anchor",href:"#基本配置","aria-hidden":"true"},"#",-1),g={href:"https://v2.vuepress.vuejs.org/zh/guide/configuration.html",target:"_blank",rel:"noopener noreferrer"},_=e("ul",null,[e("li",null,"安装后在根目录 / .vuepress 目录下创建配置文件进行配置 vuepress.config.js")],-1),k={id:"md-enhance-安装与配置",tabindex:"-1"},f=e("a",{class:"header-anchor",href:"#md-enhance-安装与配置","aria-hidden":"true"},"#",-1),x={href:"https://plugin-md-enhance.vuejs.press/zh/",target:"_blank",rel:"noopener noreferrer"},y=t(`<ul><li>插件安装</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-D</span> vuepress-plugin-md-enhance
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2),j={href:"https://plugin-md-enhance.vuejs.press/zh/guide/tex.html",target:"_blank",rel:"noopener noreferrer"},q=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">mdEnhancePlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// 启用 Katex</span>
    katex<span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),w={href:"https://plugin-md-enhance.vuejs.press/zh/guide/mark.html",target:"_blank",rel:"noopener noreferrer"},z=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">mdEnhancePlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// 开启标记</span>
    mark<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),G={id:"语法高亮插件安装",tabindex:"-1"},V=e("a",{class:"header-anchor",href:"#语法高亮插件安装","aria-hidden":"true"},"#",-1),A={href:"https://v2.vuepress.vuejs.org/zh/reference/plugin/shiki.html",target:"_blank",rel:"noopener noreferrer"},E=t(`<p>注意使用时需要输入正确的代码块类型, 如 c++ 的类型为 cpp, 否则将出错</p><h3 id="默认主题与插件配置" tabindex="-1"><a class="header-anchor" href="#默认主题与插件配置" aria-hidden="true">#</a> 默认主题与插件配置</h3><p>对于默认主题与默认插件, 可直接使用以下语句引用, 不需要额外安装</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineUserConfig<span class="token punctuation">,</span> defaultTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="githubpage-部署" tabindex="-1"><a class="header-anchor" href="#githubpage-部署" aria-hidden="true">#</a> GithubPage 部署</h2><h3 id="修改配置" tabindex="-1"><a class="header-anchor" href="#修改配置" aria-hidden="true">#</a> 修改配置</h3><ul><li>将配置文件中 base 属性设置为 &quot;/{仓库名}/&quot;</li><li>确保 package.json 中有</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;docs:build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vuepress build docs&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建-github-action-实现自动创建页面" tabindex="-1"><a class="header-anchor" href="#创建-github-action-实现自动创建页面" aria-hidden="true">#</a> 创建 Github Action 实现自动创建页面</h3><p>通过 Github Action 实现每次 push 后在云端生成静态页面</p><h4 id="本地配置" tabindex="-1"><a class="header-anchor" href="#本地配置" aria-hidden="true">#</a> 本地配置</h4><ul><li>在项目根目录下创建文件 .github/workflows/docs.yaml</li><li>参考此项目源代码中的 .github/workflows/docs.yaml 创建 <ul><li>必须要有以下配置</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code>    <span class="token comment"># 安装依赖</span>
<span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Install dependencies
    <span class="token key atrule">run</span><span class="token punctuation">:</span> pnpm install <span class="token punctuation">-</span><span class="token punctuation">-</span>frozen<span class="token punctuation">-</span>lockfile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>源代码中将 master 作为主分支, 若不为 master 需要手动修改</li></ul></li></ul><h4 id="github-配置" tabindex="-1"><a class="header-anchor" href="#github-配置" aria-hidden="true">#</a> Github 配置</h4>`,13),N=e("li",null,"将项目上传到 github 上 (可通过 vscode 工具上传)",-1),P={href:"https://blog.csdn.net/ibigboy/article/details/126402267",target:"_blank",rel:"noopener noreferrer"},B=e("li",null,[n("在项目设置中启动 Github Pages, "),e("mark",null,"设置为 Deploy from a branch"),n(", 对于此项目的 Github Action, 在 gh-pages 分支下的根目录保存静态网页")],-1),I=e("li",null,"当使用 Github Action 自动生成静态网页后, 如果将 vuepress.config.js 放在根目录下, 则文件夹 docs/.vuepress 可以写入 .gitignore 中",-1),T=e("h2",{id:"其他插件",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#其他插件","aria-hidden":"true"},"#"),n(" 其他插件")],-1),C={href:"https://github.com/vuepress/awesome-vuepress/blob/main/v2.md#blogging",target:"_blank",rel:"noopener noreferrer"},D={href:"https://plugin-blog2.vuejs.press/zh/",target:"_blank",rel:"noopener noreferrer"};function L(K,S){const s=l("ExternalLinkIcon");return r(),o("div",null,[d,e("h3",p,[u,n(),e("a",h,[n("安装 Vuepress"),a(s)])]),m,e("h3",v,[b,n(),e("a",g,[n("基本配置"),a(s)])]),_,e("h3",k,[f,n(),e("a",x,[n("md-enhance 安装与配置"),a(s)])]),y,e("ul",null,[e("li",null,[e("a",j,[n("配置 Tex"),a(s)])])]),q,e("ul",null,[e("li",null,[e("a",w,[n("配置标记语法"),a(s)])])]),z,e("h3",G,[V,n(),e("a",A,[n("语法高亮插件安装"),a(s)])]),E,e("ul",null,[N,e("li",null,[n("根据此"),e("a",P,[n("文章"),a(s)]),n("设置 Github Action, 如果之前出错则刷新")]),B,I]),T,e("ul",null,[e("li",null,[e("a",C,[n("插件查询"),a(s)])]),e("li",null,[e("a",D,[n("博客插件"),a(s)])])])])}const F=i(c,[["render",L],["__file","tutor.html.vue"]]);export{F as default};
